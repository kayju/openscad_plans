include <../lib/common.scad>

PartY = 150;

//------------------------------------------------------------------------------
// Render
//------------------------------------------------------------------------------

// Post 0
translate([0, 40, 0])
{
    board(4, 4, 9.2 * 12, 1, 0, 0);
}
dimension(4, 4, 9 * 12, 1, 0, 0, 10, PartY);

// Post 1
board(4, 4, 9.2 * 12, 1, 0, 0);
dimension(4, 4, 9 * 12, 1, 0, 0, 0, PartY);

// Post 2
translate([40, 0, 0])
{
    board(4, 4, (7.2 + 4) * 12, 1, 0, 0);
}
dimension(4, 4, 8 * 12, 1, 0, 0, 20, PartY);

// Post 3
translate([40, 40, 0])
{
    board(4, 4, (5 + 4 ) * 12, 1, 0, 0);
}
dimension(4, 4, 8 * 12, 1, 0, 0, 20, PartY);

// Post 4
translate([40, 84, 0])
{
    board(4, 4, (3 + 4) * 12, 1, 0, 0);
}
dimension(4, 4, (3 + 4) * 12, 1, 0, 0, 30, PartY);

// Post 5
translate([0, 84, 0])
{
    board(4, 4, (1 + 4) * 12, 1, 0, 0);
}
dimension(4, 4, (1 + 4) * 12, 1, 0, 0, 40, PartY);

// stair board
// 1 -------------2
// |              |  
// 0 ------------ 3
//
// (x0, y0, x1, y1, x2, y2, x3, y3, z)
module stair_board2(x0, y0, x1, y1, x2, y2, x3, y3, z)
{
    polyhedron(
        points=[[x0,y0,0], [x1,y1,0], [x2,y2,0], [x3,y3,0], [x0,y0,z], [x1,y1,z], [x2,y2,z], [x3,y3,z]],
        faces=[[0,1,2], [0,2,3],[0,4,3],[4,7,3],[0,1,5],[0,4,5],[1,2,6],[1,6,5],[2,3,7],[2,7,6],[4,5,6],[4,6,7]]);
}

module stair_board(x0, x1, y, z, dx)
{
    polyhedron(
        points=[[dx,0,0], [0,y,0], [x0,y,0], [x1+dx, 0, 0], [dx,0,z], [0,y,z], [x0,y,z], [x1+dx,0,z]],
        faces=[[0,1,2], [0,2,3],[0,4,3],[4,7,3],[0,1,5],[0,4,5],[1,2,6],[1,6,5],[2,3,7],[2,7,6],[4,5,6],[4,6,7]]);
}

translate([12, 0, 12 * 9 - 7])
{
    rotate([0, 0, 90])
    {
        stair_board2(0, 0, 0, 12, 40, 12, 40, 8, 2);
    }
}

translate([12, 0, 12 * 9 - 7 * 2])
{
    rotate([0, 0, 90])
    {
        stair_board2(0, -12, 0, 0, 40, 12, 40, 8, 2);
    }
}

translate([12, 0, 12 * 9 - 7 * 3])
{
    rotate([0, 0, 90])
    {
        stair_board2(0, -24, 0, -12, 40, 12, 40, 8, 2);
    }
}

translate([12, 0, 12 * 9 - 7 * 4])
{
    rotate([0, 0, 90])
    {
        stair_board2(0, -36, 0, -24, 40, 12, 40, 8, 2);
    }
}

translate([44, 52, 12 * 9 - 7 * 5])
{
    rotate([0, 0, 180])
    {
        stair_board2(0, 37, 0, 49, 40, 12, 40, 8, 2);
    }
}

translate([44, 52, 12 * 9 - 7 * 6])
{
    rotate([0, 0, 180])
    {
        stair_board2(0, 25, 0, 37, 40, 12, 40, 8, 2);
    }
}

translate([44, 52, 12 * 9 - 7 * 7])
{
    rotate([0, 0, 180])
    {
        stair_board2(0, 13, 0, 25, 40, 12, 40, 8, 2);
    }
}

translate([44, 52, 12 * 9 - 7 * 8])
{
    rotate([0, 0, 180])
    {
        stair_board2(0, 1, 0, 13, 40, 12, 40, 8, 2);
    }
}

translate([44, 52, 12 * 9 - 7 * 9])
{
    rotate([0, 0, 180])
    {
        stair_board2(0, -11, 0, 1, 40, 12, 40, 8, 2);
    }
}

translate([44, 52, 12 * 9 - 7 * 10])
{
    rotate([0, 0, 180])
    {
        stair_board2(0, -23, 0, -11, 40, 12, 40, 8, 2);
    }
}

translate([44, 52, 12 * 9 - 7 * 11])
{
    rotate([0, 0, 180])
    {
        stair_board2(0, -35, 0, -23, 40, 12, 40, 8, 2);
    }
}

translate([12, 44, 12 * 9 - 7 * 12])
{
    rotate([0, 0, 90])
    {
        stair_board2(0, 8, 0, 12, 44, -21, 44, -33, 2);
    }
}

translate([12, 44, 12 * 9 - 7 * 13])
{
    rotate([0, 0, 90])
    {
        stair_board2(0, 8, 0, 12, 44, -9, 44, -21, 2);
    }
}

translate([12, 44, 12 * 9 - 7 * 14])
{
    rotate([0, 0, 90])
    {
        stair_board2(0, 8, 0, 12, 44, 3, 44, -9, 2);
    }
}

translate([12, 44, 12 * 9 - 7 * 15])
{
    rotate([0, 0, 90])
    {
        stair_board2(0, 8, 0, 12, 44, 11.5, 44, 3, 2);
    }
}


// Guides
translate([44, 88, 32])
{
    rotate([0, 90, 90])
    {
        color([0,0, 1])
        parallelogram( 12, 44, 2, 20);
    }
}

translate([44, 88, 22])
{
    rotate([90, -90, 90])
    {
        color([0,0, 1])
        parallelogram( 12, 88, 2, 50);
    }
}

translate([44, 0, 74])
{
    rotate([90, -90, 0])
    {
        color([0,0, 1])
        parallelogram( 12, 44, 2, 24);
    }
}

// deck
translate([-400, -2, 12 * 9])
{
    color([1, 1, 0])
    board(400, 240, 2, 1, 0, 0);
}
